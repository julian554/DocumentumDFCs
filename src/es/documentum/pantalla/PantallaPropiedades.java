package es.documentum.pantalla;

import com.documentum.fc.client.IDfCollection;
import com.documentum.fc.client.IDfSession;
import com.documentum.fc.client.IDfTypedObject;
import com.documentum.fc.common.DfException;
import com.documentum.fc.common.IDfAttr;
import com.documentum.fc.common.IDfValue;
import es.documentum.Beans.AtributosDocumentum;
import es.documentum.utilidades.Utilidades;
import es.documentum.utilidades.UtilidadesDocumentum;
import static es.documentum.utilidades.UtilidadesDocumentum.getDfObjectValue;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julian.collado
 */
public class PantallaPropiedades extends javax.swing.JDialog {

    public String r_object_id = "";
    PantallaDocumentum pdocum = null;
    Utilidades util = null;
    UtilidadesDocumentum docum = null;
    String componente = "";

    public String getR_object_id() {
        return r_object_id;
    }

    public void setR_object_id(String r_object_id) {
        this.r_object_id = r_object_id;
    }

    public PantallaPropiedades(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        pdocum = (PantallaDocumentum) parent;
        setLocationRelativeTo(parent);
        initComponents();
        try {
            setIconImage(new ImageIcon(getLogo()).getImage());
        } catch (NullPointerException e) {
            Utilidades.escribeLog("\nError cargando el Logo " + e.getMessage() + "\n");
        }
        asignarIcono();
        util = pdocum.util;
        docum = pdocum.utilDocum;
        //      consultarValores(r_object_id);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupEditar = new javax.swing.JPopupMenu();
        opcionCopiar = new javax.swing.JMenuItem();
        botonCerrar = new javax.swing.JButton();
        CajaPropiedades = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        textoCheckout = new javax.swing.JTextField();
        textoI_partition = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textoA_content_type = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textoName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        textoR_modify_date = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textoR_creation_date = new javax.swing.JTextField();
        textoOwner_name = new javax.swing.JTextField();
        textoR_object_id = new javax.swing.JTextField();
        textoR_full_content_size = new javax.swing.JTextField();
        textoAuthors = new javax.swing.JTextField();
        textoPathSistema = new javax.swing.JTextField();
        textoR_object_type = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textoPathDocumentum = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textoA_storage_type = new javax.swing.JTextField();
        panelPermisos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPermisos = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        textoACL = new javax.swing.JTextField();
        textoDescACL = new javax.swing.JTextField();

        opcionCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/documentum/imagenes/copiar.png"))); // NOI18N
        opcionCopiar.setText("Copiar Ctrl+C");
        opcionCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCopiarActionPerformed(evt);
            }
        });
        popupEditar.add(opcionCopiar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Propiedades");
        setMaximumSize(new java.awt.Dimension(961, 576));
        setResizable(false);

        botonCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/documentum/imagenes/salir_peq.png"))); // NOI18N
        botonCerrar.setText("Cerrar");
        botonCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        botonCerrar.setMaximumSize(new java.awt.Dimension(89, 28));
        botonCerrar.setMinimumSize(new java.awt.Dimension(89, 28));
        botonCerrar.setPreferredSize(new java.awt.Dimension(89, 28));
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        CajaPropiedades.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 102), 1, true), " Propiedades Generales ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("owner_name: ");

        textoCheckout.setEditable(false);
        textoCheckout.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoCheckout.setForeground(new java.awt.Color(0, 51, 153));
        textoCheckout.setBorder(null);
        textoCheckout.setCaretColor(new java.awt.Color(0, 51, 153));
        textoCheckout.setMinimumSize(new java.awt.Dimension(6, 24));
        textoCheckout.setPreferredSize(new java.awt.Dimension(505, 24));

        textoI_partition.setEditable(false);
        textoI_partition.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoI_partition.setForeground(new java.awt.Color(0, 51, 153));
        textoI_partition.setBorder(null);
        textoI_partition.setCaretColor(new java.awt.Color(0, 51, 153));
        textoI_partition.setMinimumSize(new java.awt.Dimension(6, 24));
        textoI_partition.setPreferredSize(new java.awt.Dimension(505, 24));
        textoI_partition.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoI_partitionMousePressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("check in: ");
        jLabel13.setMaximumSize(new java.awt.Dimension(68, 24));
        jLabel13.setMinimumSize(new java.awt.Dimension(68, 24));
        jLabel13.setPreferredSize(new java.awt.Dimension(68, 24));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("r_creation_date:");

        textoA_content_type.setEditable(false);
        textoA_content_type.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoA_content_type.setForeground(new java.awt.Color(0, 51, 153));
        textoA_content_type.setBorder(null);
        textoA_content_type.setCaretColor(new java.awt.Color(0, 51, 153));
        textoA_content_type.setMinimumSize(new java.awt.Dimension(6, 24));
        textoA_content_type.setPreferredSize(new java.awt.Dimension(505, 24));
        textoA_content_type.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoA_content_typeMousePressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("a_storage_type:");

        textoName.setEditable(false);
        textoName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoName.setForeground(new java.awt.Color(0, 51, 153));
        textoName.setBorder(null);
        textoName.setCaretColor(new java.awt.Color(0, 51, 153));
        textoName.setMinimumSize(new java.awt.Dimension(6, 24));
        textoName.setPreferredSize(new java.awt.Dimension(505, 24));
        textoName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoNameMousePressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("r_modify_date:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel15.setText("authors[0]:");
        jLabel15.setMaximumSize(new java.awt.Dimension(76, 24));
        jLabel15.setMinimumSize(new java.awt.Dimension(76, 24));
        jLabel15.setPreferredSize(new java.awt.Dimension(76, 24));

        textoR_modify_date.setEditable(false);
        textoR_modify_date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoR_modify_date.setForeground(new java.awt.Color(0, 51, 153));
        textoR_modify_date.setBorder(null);
        textoR_modify_date.setCaretColor(new java.awt.Color(0, 51, 153));
        textoR_modify_date.setMinimumSize(new java.awt.Dimension(6, 24));
        textoR_modify_date.setPreferredSize(new java.awt.Dimension(505, 24));
        textoR_modify_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoR_modify_dateMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("path Sistema:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("path Documentum:");

        textoR_creation_date.setEditable(false);
        textoR_creation_date.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoR_creation_date.setForeground(new java.awt.Color(0, 51, 153));
        textoR_creation_date.setBorder(null);
        textoR_creation_date.setCaretColor(new java.awt.Color(0, 51, 153));
        textoR_creation_date.setMinimumSize(new java.awt.Dimension(6, 24));
        textoR_creation_date.setPreferredSize(new java.awt.Dimension(505, 24));
        textoR_creation_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoR_creation_dateMousePressed(evt);
            }
        });

        textoOwner_name.setEditable(false);
        textoOwner_name.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoOwner_name.setForeground(new java.awt.Color(0, 51, 153));
        textoOwner_name.setBorder(null);
        textoOwner_name.setCaretColor(new java.awt.Color(0, 51, 153));
        textoOwner_name.setMinimumSize(new java.awt.Dimension(6, 24));
        textoOwner_name.setPreferredSize(new java.awt.Dimension(505, 24));
        textoOwner_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoOwner_nameMousePressed(evt);
            }
        });
        textoOwner_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoOwner_nameActionPerformed(evt);
            }
        });

        textoR_object_id.setEditable(false);
        textoR_object_id.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoR_object_id.setForeground(new java.awt.Color(0, 51, 153));
        textoR_object_id.setBorder(null);
        textoR_object_id.setCaretColor(new java.awt.Color(0, 51, 153));
        textoR_object_id.setMinimumSize(new java.awt.Dimension(6, 24));
        textoR_object_id.setPreferredSize(new java.awt.Dimension(505, 24));
        textoR_object_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoR_object_idMousePressed(evt);
            }
        });

        textoR_full_content_size.setEditable(false);
        textoR_full_content_size.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoR_full_content_size.setForeground(new java.awt.Color(0, 51, 153));
        textoR_full_content_size.setBorder(null);
        textoR_full_content_size.setCaretColor(new java.awt.Color(0, 51, 153));
        textoR_full_content_size.setMinimumSize(new java.awt.Dimension(6, 24));
        textoR_full_content_size.setPreferredSize(new java.awt.Dimension(505, 24));
        textoR_full_content_size.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoR_full_content_sizeMousePressed(evt);
            }
        });

        textoAuthors.setEditable(false);
        textoAuthors.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoAuthors.setForeground(new java.awt.Color(0, 51, 153));
        textoAuthors.setBorder(null);
        textoAuthors.setCaretColor(new java.awt.Color(0, 51, 153));
        textoAuthors.setMinimumSize(new java.awt.Dimension(6, 24));
        textoAuthors.setPreferredSize(new java.awt.Dimension(505, 24));
        textoAuthors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoAuthorsMousePressed(evt);
            }
        });

        textoPathSistema.setEditable(false);
        textoPathSistema.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoPathSistema.setForeground(new java.awt.Color(0, 51, 153));
        textoPathSistema.setBorder(null);
        textoPathSistema.setCaretColor(new java.awt.Color(0, 51, 153));
        textoPathSistema.setMinimumSize(new java.awt.Dimension(6, 24));
        textoPathSistema.setPreferredSize(new java.awt.Dimension(505, 24));
        textoPathSistema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoPathSistemaMousePressed(evt);
            }
        });

        textoR_object_type.setEditable(false);
        textoR_object_type.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoR_object_type.setForeground(new java.awt.Color(0, 51, 153));
        textoR_object_type.setBorder(null);
        textoR_object_type.setCaretColor(new java.awt.Color(0, 51, 153));
        textoR_object_type.setMinimumSize(new java.awt.Dimension(6, 24));
        textoR_object_type.setPreferredSize(new java.awt.Dimension(505, 24));
        textoR_object_type.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoR_object_typeMousePressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("i_partition: ");
        jLabel12.setMaximumSize(new java.awt.Dimension(76, 24));
        jLabel12.setMinimumSize(new java.awt.Dimension(76, 24));
        jLabel12.setPreferredSize(new java.awt.Dimension(76, 24));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("r_full_content_size: ");
        jLabel9.setMaximumSize(new java.awt.Dimension(134, 24));
        jLabel9.setMinimumSize(new java.awt.Dimension(134, 24));
        jLabel9.setPreferredSize(new java.awt.Dimension(134, 24));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("r_object_id:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("name:");

        textoPathDocumentum.setEditable(false);
        textoPathDocumentum.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoPathDocumentum.setForeground(new java.awt.Color(0, 51, 153));
        textoPathDocumentum.setBorder(null);
        textoPathDocumentum.setCaretColor(new java.awt.Color(0, 51, 153));
        textoPathDocumentum.setMinimumSize(new java.awt.Dimension(6, 24));
        textoPathDocumentum.setPreferredSize(new java.awt.Dimension(505, 24));
        textoPathDocumentum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoPathDocumentumMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("r_object_type:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("a_content_type:");

        textoA_storage_type.setEditable(false);
        textoA_storage_type.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoA_storage_type.setForeground(new java.awt.Color(0, 51, 153));
        textoA_storage_type.setBorder(null);
        textoA_storage_type.setCaretColor(new java.awt.Color(0, 51, 153));
        textoA_storage_type.setMinimumSize(new java.awt.Dimension(6, 24));
        textoA_storage_type.setPreferredSize(new java.awt.Dimension(505, 24));
        textoA_storage_type.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoA_storage_typeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout CajaPropiedadesLayout = new javax.swing.GroupLayout(CajaPropiedades);
        CajaPropiedades.setLayout(CajaPropiedadesLayout);
        CajaPropiedadesLayout.setHorizontalGroup(
            CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CajaPropiedadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoName, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_object_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoPathSistema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoAuthors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoI_partition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_full_content_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoA_storage_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoA_content_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoPathDocumentum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_object_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_creation_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_modify_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoOwner_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CajaPropiedadesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel10, jLabel11, jLabel12, jLabel13, jLabel15, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9});

        CajaPropiedadesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textoA_content_type, textoA_storage_type, textoAuthors, textoCheckout, textoI_partition, textoName, textoOwner_name, textoPathDocumentum, textoPathSistema, textoR_creation_date, textoR_full_content_size, textoR_modify_date, textoR_object_id, textoR_object_type});

        CajaPropiedadesLayout.setVerticalGroup(
            CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CajaPropiedadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textoName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textoR_object_id, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textoR_object_type, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textoR_creation_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(textoR_modify_date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoOwner_name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textoPathDocumentum, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textoPathSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textoA_content_type, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoR_full_content_size, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textoA_storage_type, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoI_partition, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textoCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(CajaPropiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoAuthors, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        CajaPropiedadesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9});

        CajaPropiedadesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, textoOwner_name});

        panelPermisos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 102), 1, true), " Permisos ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        tablaPermisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        tablaPermisos.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tablaPermisos);
        tablaPermisos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel16.setText("ACL:");
        jLabel16.setMaximumSize(new java.awt.Dimension(134, 24));
        jLabel16.setMinimumSize(new java.awt.Dimension(134, 24));
        jLabel16.setPreferredSize(new java.awt.Dimension(134, 24));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel17.setText("Descripción ACL:");
        jLabel17.setMaximumSize(new java.awt.Dimension(134, 24));
        jLabel17.setMinimumSize(new java.awt.Dimension(134, 24));
        jLabel17.setPreferredSize(new java.awt.Dimension(134, 24));

        textoACL.setEditable(false);
        textoACL.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoACL.setForeground(new java.awt.Color(0, 51, 153));
        textoACL.setBorder(null);
        textoACL.setCaretColor(new java.awt.Color(0, 51, 153));
        textoACL.setMinimumSize(new java.awt.Dimension(6, 24));
        textoACL.setPreferredSize(new java.awt.Dimension(505, 24));
        textoACL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoACLMousePressed(evt);
            }
        });

        textoDescACL.setEditable(false);
        textoDescACL.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        textoDescACL.setForeground(new java.awt.Color(0, 51, 153));
        textoDescACL.setBorder(null);
        textoDescACL.setCaretColor(new java.awt.Color(0, 51, 153));
        textoDescACL.setMinimumSize(new java.awt.Dimension(6, 24));
        textoDescACL.setPreferredSize(new java.awt.Dimension(505, 24));
        textoDescACL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoDescACLMousePressed(evt);
            }
        });

        javax.swing.GroupLayout panelPermisosLayout = new javax.swing.GroupLayout(panelPermisos);
        panelPermisos.setLayout(panelPermisosLayout);
        panelPermisosLayout.setHorizontalGroup(
            panelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(panelPermisosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoACL, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textoDescACL, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPermisosLayout.setVerticalGroup(
            panelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPermisosLayout.createSequentialGroup()
                .addGroup(panelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textoACL, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textoDescACL, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CajaPropiedades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPermisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(424, 424, 424)
                .addComponent(botonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CajaPropiedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPermisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(botonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void opcionCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionCopiarActionPerformed
        if (componente.equals("labelName")) {
            if (textoName.getText() == null) {
                return;
            }
            if (textoName.getSelectedText() == null || textoName.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoName.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoName.getSelectedText());
            }
        }

        if (componente.equals("labelR_object_id")) {
            if (textoR_object_id.getText() == null) {
                return;
            }
            if (textoR_object_id.getSelectedText() == null || textoR_object_id.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoR_object_id.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoR_object_id.getSelectedText());
            }
        }

        if (componente.equals("labelPathSistema")) {
            if (textoPathSistema.getText() == null) {
                return;
            }
            if (textoPathSistema.getSelectedText() == null || textoPathSistema.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoPathSistema.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoPathSistema.getSelectedText());
            }
        }

        if (componente.equals("labelPathDocumentum")) {
            if (textoPathDocumentum.getText() == null) {
                return;
            }
            if (textoPathDocumentum.getSelectedText() == null || textoPathDocumentum.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoPathDocumentum.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoPathDocumentum.getSelectedText());
            }
        }

        if (componente.equals("labelR_object_type")) {
            if (textoR_object_type.getText() == null) {
                return;
            }
            if (textoR_object_type.getSelectedText() == null || textoR_object_type.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoR_object_type.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoR_object_type.getSelectedText());
            }
        }

        if (componente.equals("labelR_creation_date")) {
            if (textoR_creation_date.getText() == null) {
                return;
            }
            if (textoR_creation_date.getSelectedText() == null || textoR_creation_date.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoR_creation_date.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoR_creation_date.getSelectedText());
            }
        }

        if (componente.equals("labelR_modify_date")) {
            if (textoR_modify_date.getText() == null) {
                return;
            }
            if (textoR_modify_date.getSelectedText() == null || textoR_modify_date.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoR_modify_date.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoR_modify_date.getSelectedText());
            }
        }

        if (componente.equals("labelA_content_type")) {
            if (textoA_content_type.getText() == null) {
                return;
            }
            if (textoA_content_type.getSelectedText() == null || textoA_content_type.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoA_content_type.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoA_content_type.getSelectedText());
            }
        }

        if (componente.equals("labelR_full_content_size")) {
            if (textoR_full_content_size.getText() == null) {
                return;
            }
            if (textoR_full_content_size.getSelectedText() == null || textoR_full_content_size.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoR_full_content_size.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoR_full_content_size.getSelectedText());
            }
        }

        if (componente.equals("labelA_storage_type")) {
            if (textoA_storage_type.getText() == null) {
                return;
            }
            if (textoA_storage_type.getSelectedText() == null || textoA_storage_type.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoA_storage_type.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoA_storage_type.getSelectedText());
            }
        }

        if (componente.equals("labelOwner_name")) {
            if (textoOwner_name.getText() == null) {
                return;
            }
            if (textoOwner_name.getSelectedText() == null || textoOwner_name.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoOwner_name.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoOwner_name.getSelectedText());
            }
        }

        if (componente.equals("labelI_partition")) {
            if (textoI_partition.getText() == null) {
                return;
            }
            if (textoI_partition.getSelectedText() == null || textoI_partition.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoI_partition.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoI_partition.getSelectedText());
            }
        }

        if (componente.equals("labelAuthors")) {
            if (textoAuthors.getText() == null) {
                return;
            }
            if (textoAuthors.getSelectedText() == null || textoAuthors.getSelectedText().isEmpty()) {
                Utilidades.copiarTextoPortapapeles(textoAuthors.getText());
            } else {
                Utilidades.copiarTextoPortapapeles(textoAuthors.getSelectedText());
            }
        }
    }//GEN-LAST:event_opcionCopiarActionPerformed

    private void textoNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoNameMousePressed
        popupmenu(evt);
        componente = "labelName";
    }//GEN-LAST:event_textoNameMousePressed

    private void textoR_object_idMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoR_object_idMousePressed
        popupmenu(evt);
        componente = "labelR_object_id";
    }//GEN-LAST:event_textoR_object_idMousePressed

    private void textoPathSistemaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoPathSistemaMousePressed
        popupmenu(evt);
        componente = "labelPathSistema";
    }//GEN-LAST:event_textoPathSistemaMousePressed

    private void textoPathDocumentumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoPathDocumentumMousePressed
        popupmenu(evt);
        componente = "labelPathDocumentum";
    }//GEN-LAST:event_textoPathDocumentumMousePressed

    private void textoR_object_typeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoR_object_typeMousePressed
        popupmenu(evt);
        componente = "labelR_object_type";
    }//GEN-LAST:event_textoR_object_typeMousePressed

    private void textoR_creation_dateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoR_creation_dateMousePressed
        popupmenu(evt);
        componente = "labelR_creation_date";
    }//GEN-LAST:event_textoR_creation_dateMousePressed

    private void textoR_modify_dateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoR_modify_dateMousePressed
        popupmenu(evt);
        componente = "labelR_modify_date";
    }//GEN-LAST:event_textoR_modify_dateMousePressed

    private void textoA_content_typeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoA_content_typeMousePressed
        popupmenu(evt);
        componente = "labelA_content_type";
    }//GEN-LAST:event_textoA_content_typeMousePressed

    private void textoR_full_content_sizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoR_full_content_sizeMousePressed
        popupmenu(evt);
        componente = "labelR_full_content_size";
    }//GEN-LAST:event_textoR_full_content_sizeMousePressed

    private void textoA_storage_typeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoA_storage_typeMousePressed
        popupmenu(evt);
        componente = "labelA_storage_type";
    }//GEN-LAST:event_textoA_storage_typeMousePressed

    private void textoOwner_nameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoOwner_nameMousePressed
        popupmenu(evt);
        componente = "labelOwner_name";
    }//GEN-LAST:event_textoOwner_nameMousePressed

    private void textoI_partitionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoI_partitionMousePressed
        popupmenu(evt);
        componente = "labelI_partition";
    }//GEN-LAST:event_textoI_partitionMousePressed

    private void textoAuthorsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoAuthorsMousePressed
        popupmenu(evt);
        componente = "labelAuthors";
    }//GEN-LAST:event_textoAuthorsMousePressed

    private void textoACLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoACLMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoACLMousePressed

    private void textoDescACLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoDescACLMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoDescACLMousePressed

    private void textoOwner_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoOwner_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoOwner_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Utilidades.escribeLog("Error en el main de Acercade " + " - " + ex.getMessage());
        } catch (InstantiationException ex) {
            Utilidades.escribeLog("Error en el main de Acercade " + " - " + ex.getMessage());
        } catch (IllegalAccessException ex) {
            Utilidades.escribeLog("Error en el main de Acercade " + " - " + ex.getMessage());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Utilidades.escribeLog("Error en el main de Acercade " + " - " + ex.getMessage());
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PantallaPropiedades dialog = new PantallaPropiedades(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocationRelativeTo(dialog.getParent());
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CajaPropiedades;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem opcionCopiar;
    private javax.swing.JPanel panelPermisos;
    private javax.swing.JPopupMenu popupEditar;
    private javax.swing.JTable tablaPermisos;
    private javax.swing.JTextField textoACL;
    private javax.swing.JTextField textoA_content_type;
    private javax.swing.JTextField textoA_storage_type;
    private javax.swing.JTextField textoAuthors;
    private javax.swing.JTextField textoCheckout;
    private javax.swing.JTextField textoDescACL;
    private javax.swing.JTextField textoI_partition;
    private javax.swing.JTextField textoName;
    private javax.swing.JTextField textoOwner_name;
    private javax.swing.JTextField textoPathDocumentum;
    private javax.swing.JTextField textoPathSistema;
    private javax.swing.JTextField textoR_creation_date;
    private javax.swing.JTextField textoR_full_content_size;
    private javax.swing.JTextField textoR_modify_date;
    private javax.swing.JTextField textoR_object_id;
    private javax.swing.JTextField textoR_object_type;
    // End of variables declaration//GEN-END:variables

    private void asignarIcono() {
        java.net.URL imgURL = PantallaPropiedades.class.getClassLoader().getResource("es/documentum/imagenes/si.png");
        Icon imgicon = new ImageIcon(imgURL);
        this.botonCerrar.setIcon(imgicon);

    }

    protected static Image getLogo() {
        //   java.net.URL imgURL = PantallaDocumentum.class.getClassLoader().getResource("es/documentum/imagenes/documentum_logo_mini.gif");
        java.net.URL imgURL = PantallaDocumentum.class.getClassLoader().getResource("es/documentum/imagenes/DCTM_32.png");

        if (imgURL != null) {
            return new ImageIcon(imgURL).getImage();
        } else {
            return null;
        }
    }

    public void consultarValores(String r_object_id) {
        this.setTitle("Propiedades del objeto - " + r_object_id);
        ArrayList<AtributosDocumentum> atributos = new ArrayList<>();
        atributos = docum.dameTodosAtributos(r_object_id);
        textoR_object_id.setText(r_object_id);
        for (int n = 0; n < atributos.size(); n++) {
            String valor = atributos.get(n).getNombre().toLowerCase();
            switch (valor) {
                case "object_name":
                    textoName.setText(atributos.get(n).getValor());
                    break;
                case "r_object_type":
                    textoR_object_type.setText(atributos.get(n).getValor());
                    break;
                case "r_full_content_size":
                    String tam = util.humanReadableByteCount(Long.parseLong(atributos.get(n).getValor()), false);
                    textoR_full_content_size.setText(tam);
                    break;
                case "acl_name":
                    textoACL.setText(atributos.get(n).getValor());
                    break;
                case "i_partition":
                    textoI_partition.setText(atributos.get(n).getValor());
                    break;
                case "owner_name":
                    textoOwner_name.setText(atributos.get(n).getValor());
                    break;
                case "r_creation_date":
                    textoR_creation_date.setText(atributos.get(n).getValor());
                    break;
                case "r_modify_date":
                    textoR_modify_date.setText(atributos.get(n).getValor());
                    break;
                case "a_storage_type":
                    textoA_storage_type.setText(atributos.get(n).getValor());
                    break;
                case "a_content_type":
                    textoA_content_type.setText(atributos.get(n).getValor());
                    break;
                case "authors[0]":
                    textoAuthors.setText(atributos.get(n).getValor());
                    break;
            }

        }
        if (r_object_id.startsWith("09") || !textoA_storage_type.getText().isEmpty()) {
            textoPathSistema.setText(docum.ejecutarAPI("getpath,c," + r_object_id, "", docum.conectarDocumentum()));
        }
        textoPathDocumentum.setText(dameRutaId(r_object_id, docum.conectarDocumentum()));

        textoCheckout.setText(docum.estaCheckin(r_object_id) ? "N" : "S");

        // Permisos
        String dql = "select R_ACCESSOR_NAME,R_ACCESSOR_PERMIT, R_ACCESSOR_XPERMIT, acls.object_name as ACL_NAME"
                + " ,acls.description as DESCRIPTION from dm_document d , dm_acl_s acls,dm_acl_r aclr "
                + " where d.r_object_id='" + r_object_id + "' and d.acl_name= acls.object_name and acls.r_object_id= aclr.r_object_id";
        IDfCollection coleccion = docum.ejecutarDql(dql);
        int cont = 0;
        if (coleccion != null) {
            String nombreACL = "";
            String descACL = "";
            try {
                ArrayList lista = new ArrayList();
                while (coleccion.next()) {
                    ArrayList registro = new ArrayList();
                    String usuario = coleccion.getString("r_accessor_name");
                    registro.add(usuario);
                    String permiso = coleccion.getString("r_accessor_permit");
                    registro.add(permiso);
                    String xpermit = coleccion.getString("r_accessor_xpermit");
                    registro.add(xpermit);
                    nombreACL = coleccion.getString("acl_name");
                    descACL = coleccion.getString("description");
                    lista.add(registro);
                    cont++;
                }

                textoACL.setText(nombreACL);
                textoDescACL.setText(descACL);

                int cuantas = lista.size();
                Object[][] datos = new Object[cuantas][3];
                Object[] cabecera = {"Usuario/Grupo", "Permiso", "Permisos extendidos"};
                datos = new Object[cuantas][3];
                for (int i = 0; i < cont; i++) {
                    ArrayList registro = (ArrayList) lista.get(i);
                    datos[i][0] = registro.get(0);
                    datos[i][1] = docum.dameNombrePermiso(registro.get(1).toString());
                    datos[i][2] = docum.dameNombreXpermiso(registro.get(2).toString());
                }
                DefaultTableModel modeloLotes = new DefaultTableModel(datos, cabecera) {
                    @Override
                    public boolean isCellEditable(int fila, int columna) {
                        return false;
                    }
                };
                if (datos.length > 0) {
                    modeloLotes.setRowCount(datos.length);
                }
                tablaPermisos.setModel(modeloLotes);
                pintarTabla();
                tablaPermisos.getTableHeader().setFont(tablaPermisos.getTableHeader().getFont().deriveFont(Font.BOLD, tablaPermisos.getTableHeader().getFont().getSize2D() + 1));
            } catch (Exception ex) {
                System.out.println("Error en (consultarValores) - " + ex.getMessage());
            }
        }
    }

    private void pintarTabla() {
        tablaPermisos.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus, int row, int col) {

                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
                boolean oddRow = (row % 2 == 0);
                if (oddRow) {
                    setBackground(new Color(245, 245, 245)); // gris claro
                } else {
                    setBackground(Color.WHITE);
                }

                if (isSelected) {
                    setBackground(new Color(175, 205, 235)); // azul claro selección
                }
                return this;
            }
        });
    }

    private String dameRutaId(String r_object_id, IDfSession sesion) {
        String ruta = "";
        IDfCollection colruta = docum.ejecutarDql("select r_folder_path from dm_folder_r where r_object_id in (select i_folder_id from dm_sysobject_r where i_position=-1 and r_object_id='" + r_object_id + "') and i_position=-1", sesion);
        if (colruta != null) {
            try {
                Boolean resp = colruta.next();
                IDfTypedObject rowruta = (IDfTypedObject) colruta.getTypedObject();
                ruta = rowruta.getValueAt(0).asString();
                colruta.close();
            } catch (DfException ex) {
                System.out.println("Error al recuperar la ruta al r_object_id " + r_object_id + " - " + ex.getMessage());
            }
        }
        return ruta;
    }

    private void popupmenu(MouseEvent evt) {
        if (evt.isPopupTrigger() || evt.getButton() == java.awt.event.MouseEvent.BUTTON3) {
            if (evt.getSource().getClass().getName().equals("javax.swing.JTextField")) {
                popupEditar.show(evt.getComponent(), evt.getX(), evt.getY());
                opcionCopiar.setEnabled(true);
            }
        }
    }

}
